input {
	file {
		path => "/Users/gyrao/Documents/ELK/logstash-6.5.4/event-data/apache_*.log"
		start_position => "beginning"
	}

	file {
		path => "/Users/gyrao/Documents/ELK/logstash-6.5.4/event-data/java_errors.log"
		start_position => "beginning"

		codec => multiline {
			pattern => "^(\s+|\t)|(Caused by:)"
			what => "previous"
			auto_flush_interval => 5
		}
	}

	http {
		host => "127.0.0.1"
		port => "8080"
	}
}

filter {
  	if [headers][request_path] =~ "error" or [path] =~ "errors" {
		mutate {
			replace => { type => "error" }
		}
	} else {
		mutate {
			replace => { type => "access" }
		}

		grok {
			match => { "message" => '%{HTTPD_COMMONLOG} "%{GREEDYDATA:referrer} %{GREEDYDATA:agent}"' }
		}

		if "_grokparsefailure" in [tags] {
			drop { }
		}

		useragent {
			source => "agent"
			target => "ua"
		}

        # Remove Admin pages
		if [request] =~ /^\/admin\// {
			drop { }
		}

		# Rmove Static files
		if [request] =~ /^\/js\// or [request] =~ /^\/css\// or [request] in [ "/robots.txt","/favicon.ico" ] {
			drop { }
		}

		# Remoce crawlers
		if [ua][device] == "Spider" {
			drop { }
		}

		mutate {
			convert => {
				"response" => "integer"
				"bytes" => "integer"
			}
			remove_field => [ "headers" , "timestamp" ,"@version" ]
		}

		date {
			match => [ "timestamp", "dd/MM/yyyy:HH:mm:ss Z" ]
		} 

		geoip {
			source => "clientip"
		}
	}
}

output {
	if [type] == "access" {
		elasticsearch {
			hosts => [ "localhost:9200" ]
			#index => "%{type}-%{+YYYY.MM.dd}"
			document_type => "default"
			http_compression => true
		}
	} else {
		stdout {
			codec => rubydebug
		}
	}
	
}

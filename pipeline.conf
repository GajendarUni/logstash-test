input {
	file {
		path => "/Users/gyrao/Documents/ELK/logstash-6.5.4/event-data/apache_*.log"
		start_position => "beginning"
	}

	http {
		host => "127.0.0.1"
		port => "8080"
	}
}

filter {
  	if [headers][request_path] =~ "error" or [path] =~ "errors" {
		mutate {
			replace => { type => "error" }
		}
	} else {
		mutate {
			replace => { type => "access" }
		}

		grok {
			match => { "message" => '%{HTTPD_COMMONLOG} "%{GREEDYDATA:referrer} %{GREEDYDATA:agent}"' }
		}

		if "_grokparsefailure" in [tags] {
			drop { }
		}

		useragent {
			source => "agent"
			target => "ua"
		}

        # Remove Admin pages
		if [request] =~ /^\/admin\// {
			drop { }
		}

		# Rmove Static files
		if [request] =~ /^\/js\// or [request] =~ /^\/css\// or [request] in [ "/robots.txt","/favicon.ico" ] {
			drop { }
		}

		# Remoce crawlers
		if [ua][device] == "Spider" {
			drop { }
		}

		mutate {
			convert => {
				"response" => "integer"
				"bytes" => "integer"
			}
			remove_field => [ "headers" , "timestamp" ,"@version" ]
		}

		date {
			match => [ "timestamp", "dd/MM/yyyy:HH:mm:ss Z" ]
		} 

		geoip {
			source => "clientip"
		}
	}
}

output {
	stdout {
		codec => rubydebug
	}

	file {
		path => "%{type}_%{+yyyy_MM_dd}.log"
	}
}


# %{IP:ip_address} %{USER:identity} %{USER:auth} \[%{HTTPDATE:req_ts}] \"%{WORD:http_verb} %{URIPATHPARAM:req_path} HTTP/%{NUMBER:http_ver}\" %{INT:http_status:int} %{INT:num_bytes:int}


# To remove  excess " from agent and referrer
# ===========================

# %{HTTPD_COMBINEDLOG}
# gsub => [
#        "agent", '"', "",
#       "referrer", '"', ""
#    ]
